class Solution:
    def maxValueAfterReverse(self, nums):
        agg = []
        for i in range(len(nums)-1):
            agg.append(abs(nums[i]-nums[i+1]))
        total = sum(agg)

        maxx = 0
        for i in range(len(nums)):
            for j in range(i+1, len(nums)-1):
                print(i, j)
                left = abs(nums[i-1] - nums[j]) - abs(nums[i-1] - nums[i])
                right = abs(nums[j+1] - nums[i]) - abs(nums[j+1] - nums[j])
                if left + right > maxx:
                    maxx = left + right
                    loc = i, j

        return total + maxx


class Solution:
    def maxValueAfterReverse(self, nums):
        agg = []
        for i in range(len(nums)-1):
            agg.append(abs(nums[i]-nums[i+1]))
        total = sum(agg)

        maxx = 0
        for i in range(len(nums)):
            for j in range(i+1, len(nums)-1):
                print(i, j)
                left = abs(nums[i-1] - nums[j]) - abs(nums[i-1] - nums[i])
                right = abs(nums[j+1] - nums[i]) - abs(nums[j+1] - nums[j])
                if left + right > maxx:
                    maxx = left + right
                    loc = i, j

        return total + maxx
    
class Solution:
    def maxValueAfterReverse(nums):
        # Had to look at some solutions, but now it makes sense.
        #
        # Key insights: we start with ..... a b ..... c d ....
        #    > if we reverse b .. c, then the change in value is |d-b|+|a-c| - |d-c|-|b-a|
        #    > |x| = max(x, -x)          ==>  |d-b| = max(d-b, b-d)
        #    > max(x, y) = x+y-min(x,y)  ==>  |d-b| = d-b + b-d - min(d-b, b-d) = -min(d-b, b-d)
        #    > as we scan the array, in O(N) we can find the best values of f(a, b) and f(c, d)
        #      because they're right next to each other.
        #      
        #      **So we need to expand the |d-b| and |a-c| terms so they're easier to calculate**
        #      (this is where the 4 cases come from here and in other solutions)
        #
        #    > and finally: suppose we find the best value of a-b, on the assumption that
        #      a > b. If a < b instead, then that's okay: it will be negative instead of
        #      positive. We only want the overall max, so the cases were we assumed the wrong
        #      order will be sub-optimal and so we'll end up ignoring them.
        #      THIS is why we don't need to actually check if b>d or b<=d, etc. when
        #      applying the cases.
        #
        # Case I: d>b and c>a:
        #     S - |b-a| - |d-c| + d - b + c - a
        #     S - max(b-a, a-b) - max(d-c, c-d) + d + c - b - a
        #     S + min(b-a, a-b) + min(d-c, c-d) + d + c - b - a   # max(x, y) == x+y - min(x, y); here x+y == 0
        #     S + min(-2a, -2b) + min(2d, 2c)                     # min(x, y) + c == min(x+c, y+c)
        #     S + 2*min(-a, -b) + 2*min(c, d) # where b is before c, "sequential update" like the "two stock trades" problem
        #
        # Case II: d<b and c>a:
        #     S - |b-a| - |d-c| + b - d + c - a
        #     S + min(a-b, b-a) + min(c-d, d-c) + b - a + c - d
        #     S + min(0, 2b-2*a) + min(2c-2d, 0)
        #     S + 2*min(b-a, 0) + 2*min(c-d, 0))
        #
        # Case III: d>b and c<a:
        #     S + min(a-b, b-a) + min(c-d, d-c) + d-b + a-c
        #     S + min(a-b, b-a) + min(c-d, d-c) + d-c + a-b
        #     S + min(2*(a-b), 0) + min(0, 2*(d-c))
        #     S + 2*min(a-b, 0) + 2*min(d-c, 0)
        #
        # Case IV: d<b and c<a:
        #     S + min(a-b, b-a) + min(d-c, c-d) + b - d + a - c
        #     S + min(a-b, b-a) + min(d-c, c-d) + a + b - c - d
        #     S + min(2a, 2b) + min(-2c, -2d)
        #     S + 2*min(a, b) + 2*min(-c, -d)

        # Final insight: maxing out f(a,b) + f(c, d)   (functions of adjacent pairs)
        # is a LOT like the maximum value of a stock trade problem.
        # > first we use the current adjacent pair, f(c,d), and use the max value of f(a,b)
        #   among earlier pairs. This is because the formulas are reversing b..c, so a and c can't
        #   be the same
        # > then we update the best value of f(a, b) that includes the prior pair, because
        #   from the next iteration's perspective, (c,d) are just another possible earlier (a,b) pair
        
        N = len(nums)

        min_ma_mb = min(-nums[0], -nums[1])
        min_bma_0 = min(nums[1]-nums[0], 0)
        min_amb_0 = min(nums[0]-nums[1], 0)
        min_a_b = min(nums[0], nums[1])
        best_I = 0
        best_II = 0
        best_III = 0
        best_IV = 0
        for i in range(2, N):
            d = nums[i]
            c = nums[i-1]
            
            best_I = max(best_I, 2*min(c, d) + 2*min_ma_mb)
            best_II = max(best_II, 2*min(c-d, 0) + 2*min_bma_0)
            best_III = max(best_III, 2*min(d-c, 0) + 2*min_amb_0)
            best_IV = max(best_IV, 2*min(-c, -d) + 2*min_a_b)

            min_ma_mb = max(min_ma_mb, min(-c, -d))
            min_bma_0 = max(min_bma_0, min(d-c, 0))
            min_amb_0 = max(min_amb_0, min(d-c, 0))
            min_a_b = max(min_a_b, min(c, d))

        # other edge cases:
        #    reverse prefix: if we reverse [0, i) then we lose |nums[i]-nums[i-1]| and gain |nums[i]-nums[0]|
        #    reverse suffix: if we reverse i.. then we lose |nums[i]-nums[i-1]| and gain |nums[i-1]-nums[-1]|
        # TODO: we can roll this into a single pass if we really want to
        left_gain = max(abs(nums[i]-nums[0]) - abs(nums[i]-nums[i-1]) for i in range(1, N))
        right_gain = max(abs(nums[i-1]-nums[-1]) - abs(nums[i]-nums[i-1]) for i in range(1, N))

        # All the accumulations are max and start with zero, so the lowest value of max(...) is 0.
        # Therefore this includes the possibility that not reversing any elements is optimal
        # (the formulas above also include reversing just the first or last element, which is equivalent
        #  to reversing nothing)

        return sum(abs(nums[i]-nums[i-1]) for i in range(1, N)) + max(best_I, best_II, best_III, best_IV, left_gain, right_gain)

def maxValueAfterReverse(nums):
    minVal = float('inf')
    maxVal = float('-inf')
    totalValue = 0
    change = 0
    for a, b in zip(nums, nums[1:]):
        maxVal = max(min(a, b), maxVal)
        minVal = min(max(a, b), minVal)
        delta = abs(a - b)
        totalValue += delta
        boundaryValue = max(abs(nums[0] - b), abs(nums[-1] - a)) - delta
        change = max(change, boundaryValue, 2 * (maxVal - minVal))
    return totalValue + change


print(maxValueAfterReverse(nums = [25, 4, 9, 1, 2, 10]))
print(maxValueAfterReverse(nums = [2, 3, 1, 5, 4]))
print(maxValueAfterReverse(nums = [2, 4, 9, 24, 2, 1, 10]))

solve = Solution()
# print(solve.maxValueAfterReverse(nums = [132, 102, 115, 172, 180, 63, 75, 137, 195, 167, 91, 98, 127, 125, 145, 11, 12, 25, 88, 151, 15, 113, 189, 194, 27, 78, 82, 171, 98, 21, 64, 104, 67, 57, 5, 38, 8, 75, 127, 111, 154, 88, 139, 27, 29, 124, 126, 149, 80, 41, 119, 149, 79, 39, 161, 98, 182, 156, 195, 35, 176, 147, 143, 91, 159, 78, 81, 170, 81, 23, 90, 118, 1, 81, 39, 132, 23, 108, 132, 181, 58, 63, 97, 8, 117, 11, 35, 78, 62, 116, 23, 191, 165, 161, 162, 83, 9, 11, 41, 101, 197, 156, 183, 62, 184, 56, 127, 141, 23, 31, 192, 24, 172, 118, 144, 153, 64, 15, 177, 27, 35, 1, 106, 38, 20, 61, 172, 40, 27, 120, 122, 90, 157, 74, 61, 42, 51, 117, 141, 40, 167, 54, 167, 145, 183, 160, 39, 88, 109, 106, 84, 123, 57, 17, 160, 14, 26, 71, 55, 152, 66, 67, 57, 181, 97, 108, 172, 53, 165, 8, 51, 8, 106, 106, 37, 34, 1, 103, 79, 62, 61, 196, 144, 99, 18, 163, 88, 28, 192, 132, 155, 114, 151, 50, 106, 21, 128, 73, 193, 78, 94, 113, 98, 37, 65, 14, 70, 84, 199, 24, 19, 19, 129, 94, 85, 178, 138, 83, 143, 153, 86, 137, 57, 101, 184, 9, 181, 12, 20, 54, 157, 100, 175, 42, 18, 191, 51, 106, 186, 47, 57, 145, 139, 48, 31, 1, 89, 157, 41, 113, 34, 148, 123, 110, 129, 59, 197, 143, 45, 61, 105, 60, 174, 16, 34, 86, 32, 160, 72, 99, 11, 84, 103, 184, 111, 99, 100, 59, 62, 121, 111, 11, 189, 138, 32, 86, 61, 47, 39, 65, 114, 89, 161, 99, 3, 26, 170, 29, 146, 66, 87, 176, 135, 90, 171, 179, 196, 29, 32, 150, 183, 140, 110, 77, 84, 100, 116, 81, 136, 120, 163, 131, 38, 193, 95, 64, 191, 67, 32, 162, 133, 196, 104, 108, 89, 101, 29, 93, 100, 88, 44, 172, 95, 62, 167, 58, 7, 92, 181, 179, 21, 125, 40, 85, 9, 124, 188, 75, 199, 157, 77, 112, 190, 56, 88, 61, 24, 145, 70, 53, 69, 117, 65, 163, 194, 185, 51, 108, 136, 138, 159, 71, 53, 20, 82, 88, 177, 18, 6, 158, 92, 153, 9, 147, 37, 117, 123, 57, 38, 129, 132, 197, 117, 83, 72, 180, 163, 40, 179, 86, 192, 70, 39, 63, 136, 31, 46, 73, 81, 183, 188, 84, 151, 117, 103, 1, 4, 28, 131, 174, 91, 5, 31, 27, 140, 121, 73, 33, 91, 191, 94, 53, 169, 98, 61, 81, 91, 144, 13, 153, 19, 124, 56, 105, 67, 52, 176, 75, 127, 183, 123, 52, 73, 157, 70, 121, 42, 122, 132, 182, 75, 194, 117, 120, 94, 186, 70, 37, 190, 57, 47, 54, 11, 103, 138, 31, 22, 89, 161, 110, 45, 178, 194, 180, 149, 65, 83, 77, 122, 26, 62, 4, 13, 95, 58, 160, 131, 10, 112, 40, 71, 176, 79, 188, 16, 140, 188, 92, 41, 82, 77, 111, 53, 162, 133, 116, 117, 47, 73, 199, 4, 166, 63, 112, 49, 138, 101, 143, 173, 104, 143, 169, 42, 35, 111, 57, 151, 53, 165, 179, 91, 192, 118, 172, 123, 22, 82, 189, 94, 44, 25, 174, 61, 80, 69, 83, 175, 21, 23, 149, 146, 51, 35, 126, 125, 113, 98, 135, 114, 84, 31, 159, 187, 23, 6, 20, 187, 83, 161, 22, 163, 22, 66, 40, 156, 49, 156, 21, 143, 160, 124, 116, 60, 120, 51, 88, 93, 162, 148, 109, 54, 91, 118, 52, 36, 166, 155, 23, 181, 47, 106, 63, 54, 99, 181, 98, 92, 128, 167, 62, 80, 187, 182, 101, 15, 57, 3, 182, 20, 32, 62, 185, 121, 157, 14, 170, 42, 83, 39, 128, 102, 193, 6, 137, 162, 63, 4, 90, 21, 166, 53, 153, 170, 156, 45, 151, 76, 18, 172, 41, 11, 73, 26, 181, 169, 33, 34, 135, 145, 145, 173, 145, 76, 87, 89, 131, 11, 85, 133, 119, 182, 13, 31, 143, 122, 3, 162, 84, 3, 43, 157, 35, 181, 32, 78, 44, 143, 1, 57, 171, 49, 115, 90, 169, 135, 134, 50, 139, 69, 153, 41, 4, 166, 38, 44, 159, 80, 42, 31, 125, 65, 167, 122, 133, 91, 38, 39, 108, 187, 187, 2, 39, 163, 76, 117, 175, 136, 42, 95, 70, 105, 120, 44, 44, 81, 176, 6, 150, 100, 101, 186, 84, 131, 51, 197, 36, 55, 173, 183, 151, 53, 53, 191, 54, 178, 107, 172, 185, 90, 110, 172, 27, 183, 45, 147, 104, 176, 185, 58, 27, 170, 150, 37, 43, 88, 6, 119, 131, 190, 151, 157, 169, 196, 168, 187, 31, 74, 71, 152, 22, 116, 193, 195, 110, 109, 46, 4, 76, 150, 152, 156, 37, 34, 117, 90, 187, 131, 35, 145, 88, 14, 20, 140, 86, 99, 73, 93, 80, 198, 125, 172, 47, 94, 136, 8, 4, 189, 26, 56, 116, 66, 192, 59, 54, 60, 16, 47, 117, 190, 19, 25, 123, 150, 157, 46, 128, 78, 106, 98, 191, 103, 7, 159, 188, 134, 58, 24, 40, 175, 193, 81, 37, 158, 65, 55, 22, 23, 107, 117, 180, 174, 85, 155, 20, 58, 14, 190, 81, 99, 183, 54, 167, 83, 168, 98, 189, 36, 25, 58, 3, 67, 50, 144, 47, 120, 22, 129, 63, 84, 176, 25, 102, 34, 188, 193, 6, 97, 60, 50, 22, 105, 10, 37, 36, 182, 61, 172, 64, 48, 147, 136, 156, 145, 51, 29, 51, 17, 41, 43, 186, 75, 197, 16, 177, 73, 108, 115, 186, 164, 158, 161, 65, 125, 141, 156, 64, 71, 61, 117, 55, 26, 198, 35, 30, 192, 31, 132, 70, 71, 37, 65, 14, 36, 75, 104, 181, 105, 111, 104, 155, 104, 41, 129, 72, 67, 189, 37, 87, 174, 22, 122, 23, 127, 122, 106, 70, 175, 106, 82, 57, 4, 11, 43, 66, 9, 193, 31, 199, 50, 199, 56, 42, 94, 41, 131, 42, 111, 187, 188, 131, 183, 6, 110, 97, 61, 25, 193, 21, 48, 104, 32, 19, 53, 140, 99, 35, 149, 120, 43, 167, 118, 184, 185, 35, 56, 190, 161, 96, 147, 170, 92, 112, 98, 84, 61, 163, 196, 96, 95, 179, 24, 164, 176, 124, 30, 169, 136, 197, 17, 16, 164, 182, 44, 39, 115, 129, 198, 93, 138, 143, 83, 187, 63, 7, 127, 137, 11, 161, 78, 51, 59, 44, 125, 99, 186, 89, 84, 45, 162, 152, 77, 163, 89, 38, 56, 103, 153, 43, 26, 79, 68, 146, 42, 87, 179, 44, 163, 170, 11, 38, 48, 82, 51, 37, 88, 143, 98, 136, 155, 95, 11, 61, 111, 85, 82, 157, 86, 189, 146, 199, 113, 145, 180, 82, 25, 153, 152, 107, 194, 37, 51, 29, 169, 152, 36, 196, 177, 192, 2, 184, 20, 175, 123, 190, 70, 18, 188, 106, 80, 113, 44, 130, 119, 15, 148, 164, 187, 80, 171, 118, 61, 32, 48, 154, 156, 29, 12, 127, 35, 150, 173, 151, 84, 147, 25, 178, 3, 86, 193, 58, 56, 86, 129, 95, 107, 128, 98, 102, 23, 107, 48, 91, 111, 131, 164, 183, 82, 130, 91, 40, 130, 28, 2, 172, 159, 195, 68, 16, 51, 77, 62, 137, 113, 96, 190, 24, 37, 120, 114, 145, 53, 69, 17, 160, 29, 88, 65, 73, 159, 8, 117, 47, 49, 12, 175, 22, 128, 126, 136, 164, 61, 139, 196, 46, 57, 42, 43, 150, 33, 73, 81, 9, 75, 27, 199, 95, 36, 108, 9, 25, 153, 158, 36, 125, 149, 37, 134, 115, 31, 45, 150, 115, 139, 35, 16, 159, 140, 150, 90, 3, 16, 166, 177, 144, 97, 51, 124, 61, 33, 83, 68, 135, 40, 137, 129, 81, 143, 9, 159, 27, 187, 14, 44, 41, 40, 127, 67, 69, 165, 188, 6, 52, 95, 196, 177, 69, 51, 195, 184, 50, 15, 128, 169, 193, 103, 175, 169, 48, 94, 126, 177, 106, 141, 135, 178, 166, 179, 38, 107, 150, 1, 25, 92, 85, 12, 41, 33, 13, 30, 56, 120, 179, 41, 65, 139, 10, 198, 21, 129, 19, 179, 12, 58, 60, 5, 27, 156, 158, 96, 50, 17, 110, 49, 155, 144, 190, 89, 140, 170, 188, 85, 118, 2, 51, 160, 32, 76, 111, 41, 38, 79, 23, 23, 141, 37, 161, 116, 181, 99, 96, 1, 32, 186, 127, 95, 199, 130, 180, 88, 150, 52, 197, 190, 88, 117, 34, 150, 159, 83, 71, 112, 191, 56, 6, 44, 199, 83, 120, 138, 185, 89, 135, 186, 168, 137, 194, 75, 110, 164, 150, 1, 124, 178, 139, 134, 116, 36, 147, 157, 20, 115, 131, 107, 113, 143, 127, 45, 105, 83, 9, 21, 62, 131, 151, 71, 192, 184, 137, 78, 16, 65, 152, 102, 130, 76, 63, 49, 87, 169, 92, 78, 134, 62, 71, 129, 184, 46, 61, 146, 168, 50, 184, 198, 50, 48, 4, 58, 26, 65, 56, 187, 103, 114, 152, 37, 74, 48, 152, 55, 119, 187, 28, 166, 178, 199, 66, 199, 134, 47, 84, 16, 179, 197, 194, 84, 51, 135, 102, 62, 76, 87, 104, 106, 45, 174, 164, 14, 197, 106, 13, 95, 61, 60, 57, 13, 165, 114, 18, 164, 85, 110, 30, 91, 81, 40, 103, 108, 140, 77, 30, 123, 140, 106, 103, 17, 154, 122, 13, 183, 128, 107, 198, 153, 152, 170, 100, 32, 117, 197, 57, 160, 116, 6, 88, 115, 154, 158, 181, 28, 146, 87, 76, 7, 2, 15, 21, 53, 108, 29, 58, 83, 6, 140, 36, 102, 64, 141, 122, 15, 90, 99, 44, 111, 146, 110, 170, 105, 110, 17, 145, 108, 133, 125, 69, 32, 33, 87, 164, 47, 135, 107, 38, 185, 174, 65, 123, 56, 43, 9, 165, 160, 13, 122, 36, 27, 86, 43, 122, 139, 148, 49, 106, 42, 186, 77, 59, 77, 67, 89, 163, 78, 113, 153, 72, 16, 82, 167, 188, 154, 42, 129, 90, 25, 50, 152, 55, 109, 6, 66, 56, 116, 69, 107, 179, 195, 95, 91, 67, 150, 100, 142, 36, 49, 106, 151, 98, 168, 150, 150, 1, 71, 24, 38, 69, 24, 119, 60, 124, 82, 13, 113, 94, 37, 84, 148, 71, 27, 7, 91, 37, 54, 73, 198, 125, 172, 153, 43, 78, 32, 91, 48, 9, 161, 140, 25, 58, 134, 43, 92, 52, 118, 125, 135, 7, 113, 91, 126, 189, 129, 52, 85, 17, 20, 89, 133, 142, 26, 103, 177, 130, 120, 59, 161, 55, 88, 139, 174, 154, 103, 69, 149, 65, 27, 59, 69, 38, 2, 172, 134, 92, 124, 95, 151, 176, 23, 72, 111, 50, 113, 113, 165, 179, 188, 74, 177, 90, 36, 193, 110, 72, 196, 109, 57, 18, 35, 108, 58, 92, 22, 59, 48, 55, 125, 77, 174, 169, 194, 34, 41, 6, 65, 65, 164, 110, 137, 150, 199, 13, 21, 141, 198, 60, 100, 70, 23, 107, 27, 183, 103, 3, 1, 125, 8, 137, 32, 192, 51, 40, 115, 99, 109, 121, 113, 171, 52, 67, 94, 92, 31, 176, 52, 183, 31, 124, 16, 30, 99, 182, 48, 31, 138, 80, 198, 167, 53, 193, 99, 23, 75, 42, 79, 79, 99, 171, 100, 199, 171, 35, 177, 100, 32, 86, 189, 86, 51, 191, 152, 160, 98, 153, 157, 32, 196, 4, 34, 25, 130, 143, 191, 36, 100, 112, 120, 85, 69, 43, 164, 56, 87, 65, 187, 57, 164, 62, 86, 87, 108, 100, 173, 93, 38, 167, 33, 95, 189, 178, 161, 84, 23, 28, 175, 128, 104, 187, 3, 172, 49, 164, 20, 37, 140, 161, 139, 105, 184, 6, 112, 119, 26, 65, 170, 140, 197, 106, 162, 32, 150, 96, 147, 140, 198, 74, 150, 90, 92, 115, 49, 107, 14, 28, 22, 97, 52, 100, 70, 196, 18, 70, 136, 79, 193, 61, 6, 146, 170, 163, 98, 125, 95, 126, 24, 63, 49, 191, 174, 103, 137, 10, 176, 65, 158, 80, 55, 109, 27, 122, 8, 49, 20, 115, 178, 129, 115, 23, 6, 87, 82, 22, 27, 185, 151, 157, 174, 60, 162, 115, 82, 170, 191, 95, 45, 179, 110, 36, 124, 183, 78, 181, 191, 58, 113, 33, 67, 147, 26, 6, 26, 74, 87, 77, 117, 93, 102, 189, 17, 120, 178, 82, 69, 147, 118, 182, 52, 34, 192, 89, 80, 24, 67, 126, 174, 103, 90, 82, 130, 47, 64, 138, 133, 25, 69, 183, 129, 49, 165, 58, 89, 31, 50, 53, 118, 53, 6, 71, 48, 159, 136, 175, 43, 93, 34, 172, 36, 95, 109, 153, 36, 117, 21, 73, 132, 156, 198, 153, 193, 23, 15, 98, 145, 147, 32, 122, 127, 139, 71, 22, 133, 7, 138, 4, 58, 2, 56, 175, 155, 101, 127, 58, 27, 63, 35, 112, 22, 5, 93, 135, 105, 85, 106, 149, 130, 171, 2, 137, 46, 127, 60, 157, 53, 122, 126, 101, 48, 196, 101, 155, 51, 81, 108, 24, 148, 1, 94, 185, 24, 123, 151, 157, 196, 188, 111, 12, 170, 124, 11, 34, 197, 20, 17, 151, 48, 18, 16, 4, 76, 39, 116, 179, 135, 143, 198, 115, 31, 30, 172, 115, 49, 142, 35, 142, 199, 143, 69, 82, 194, 141, 130, 141, 17, 7, 25, 113, 78, 199, 71, 44, 66, 11, 19, 75, 22, 85, 118, 94, 142, 91, 195, 23, 45, 98, 138, 138, 104, 176, 11, 108, 117, 174, 100, 155, 137, 50, 181, 9, 51, 46, 196, 180, 58, 43, 127, 45, 47, 150, 48, 1, 2, 116, 173, 43, 137, 110, 173, 26, 61, 116, 87, 74, 158, 191, 120, 1, 166, 142, 97, 128, 177, 193, 145, 76, 12, 116, 25, 20, 130, 135, 112, 128, 130, 59, 181, 167, 97, 21, 155, 8, 18, 9, 132, 72, 57, 5, 66, 34, 18, 153, 182, 123, 4, 188, 20, 3, 107, 182, 1, 55, 177, 167, 93, 84, 26, 71, 148, 23, 194, 166, 177, 68, 67, 46, 137, 67, 146, 50, 71, 108, 192, 7, 115, 27, 121, 138, 138, 126, 134, 191, 74, 59, 17, 177, 165, 118, 42, 114, 60, 6, 7, 23, 132, 171, 24, 3, 148, 176, 52, 124, 86, 116, 53, 38, 36, 177, 60, 33, 111, 114, 149, 96, 111, 142, 166, 178, 159, 187, 56, 32, 9, 75, 20, 20, 156, 131, 154, 185, 128, 155, 189, 30, 158, 146, 188, 147, 74, 49, 48, 41, 11, 149, 38, 67, 63, 114, 25, 150, 59, 84, 80, 153, 25, 13, 59, 53, 76, 190, 106, 75, 45, 186, 77, 139, 61, 153, 20, 119, 102, 83, 79, 87, 63, 51, 13, 81, 156, 31, 40, 64, 173, 113, 33, 29, 62, 3, 59, 11, 146, 145, 30, 85, 120, 172, 138, 90, 178, 25, 108, 193, 66, 63, 124, 190, 184, 85, 43, 40, 173, 62, 38, 87, 99, 130, 175, 107, 65, 41, 119, 108, 182, 171, 99, 55, 97, 120, 150, 94, 81, 180, 4, 98, 194, 198, 27, 150, 82, 100, 166, 76, 192, 150, 79, 69, 46, 147, 167, 173, 21, 121, 165, 163, 41, 184, 41, 50, 32, 37, 123, 136, 62, 29, 26, 178, 94, 109, 43, 41, 120, 154, 154, 61, 149, 53, 96, 152, 13, 180, 26, 3, 148, 152, 49, 49, 143, 81, 49, 133, 19, 38, 150, 113, 185, 148, 187, 48, 98, 184, 36, 63, 162, 93, 116, 80, 59, 191, 151, 171, 119, 35, 180, 180, 89, 131, 114, 45, 111, 185, 64, 131, 141, 140, 30, 117, 66, 71, 152, 118, 184, 174, 198, 44, 100, 165, 146, 178, 82, 168, 112, 112, 102, 25, 70, 132, 175, 183, 161, 88, 22, 40, 122, 116, 23, 43, 83, 105, 71, 5, 55, 9, 143, 56, 117, 7, 46, 122, 46, 8, 143, 123, 26, 8, 68, 178, 49, 66, 154, 36, 173, 140, 62, 70, 141, 178, 46, 142, 34, 6, 166, 155, 177, 79, 180, 35, 18, 169, 177, 118, 19, 17, 23, 92, 141, 3, 144, 78, 171, 178, 16, 30, 44, 92, 41, 39, 128, 79, 152, 134, 193, 86, 122, 141, 73, 64, 23, 128, 148, 167, 49, 84, 150, 95, 42, 13, 45, 141, 166, 99, 176, 129, 100, 162, 109, 9, 195, 120, 11, 108, 156, 43, 65, 135, 22, 51, 91, 105, 50, 102, 81, 146, 21, 185, 191, 54, 119, 98, 162, 34, 92, 117, 26, 56, 106, 81, 199, 183, 140, 128, 68, 128, 183, 136, 42, 47, 124, 174, 38, 42, 141, 129, 73, 173, 48, 58, 8, 40, 22, 127, 78, 24, 157, 110, 152, 146, 27, 114, 24, 77, 153, 148, 120, 115, 198, 10, 132, 109, 109, 183, 74, 130, 135, 30, 56, 42, 10, 75, 21, 125, 81, 100, 95, 191, 149, 27, 95, 51, 87, 94, 31, 29, 41, 5, 194, 163, 198, 91, 88, 112, 118, 1, 21, 90, 171, 18, 19, 112, 147, 49, 104, 16, 28, 83, 70, 65, 49, 58, 124, 183, 49, 194, 98, 158, 99, 180, 16, 93, 143, 35, 145, 115, 159, 85, 47, 74, 120, 47, 153, 48, 193, 136, 95, 112, 181, 29, 123, 15, 7, 142, 143, 56, 14, 76, 126, 141, 163, 34, 34, 101, 59, 199, 104, 25, 74, 133, 98, 16, 105, 82, 24, 163, 188, 150, 134, 194, 105, 151, 1, 49, 77, 174, 137, 117, 94, 38, 79, 149, 155, 185, 181, 12, 147, 144, 35, 147, 68, 165, 108, 176, 74, 48, 28, 11, 57, 15, 80, 105, 137, 26, 129, 51, 52, 124, 136, 75, 6, 140, 29, 25, 78, 180, 55, 183, 155, 136, 73, 18, 64, 186, 100, 110, 38, 64, 177, 25]))
print(solve.maxValueAfterReverse(nums = [2, 3, 1, 5, 4]))
print(solve.maxValueAfterReverse(nums = [2, 4, 9, 24, 2, 1, 10]))

